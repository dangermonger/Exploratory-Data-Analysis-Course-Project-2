total <- cbind(Years = rownames(total), total) ##convert row names to column
rownames(total) <- NULL ## remove row names
total$Years <- factor(total$Years)
str(total)
qplot(Years,  NON.ROAD,  data	=	total,	facets	=	.~type)
str(total)
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
baltdata$year <- factor(baltdata$year) ##convert year to factor
baltdata$type <- factor(baltdata$type) ##convert type to factor
str(baltdata)
qplot(year,  Emissions,	data	=	baltdata,	facets	=	.~type)
tail(baltdata)
X <- split(baltdata, baltdata$type)
str(X)
X
splitdata <- split(baltdata, baltdata$type)
?for
?for
?loop\
?loop\
?loop
??loop
str(splitdata)
?lapply
list(mtcars=mtcars,iris=iris)
lapply(x,function(x)cor(x[,2],x[,3]))
x = list(mtcars=mtcars,iris=iris)
lapply(x,function(x)cor(x[,2],x[,3]))
?cor
str(splitdata)
?lapply
lapply(splitdata,data.frame(with(splitdata, tapply(Emissions, year, sum))))
str(splitdata)
lapply(splitdata,tapply(splitdata$Emissions, splitdata$year, sum))
lapply(splitdata, tapply(splitdata$Emissions, splitdata$year, sum))
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal t
library(dplyr) ##bring up dplr library
convertbl <- tbl_df(baltdata) ## convert table to tbl
rm("baltdata") ## remove other handle
convertbl ##print conv
?summarize
summarise(convertbl, Emissions)
library(dplyr) ##bring up dplr library
library(tidyr)
str(convertbl)
convertbl %>%
group_by(type, year)
str(convertbl)
convertbl %>%
group_by(type, year)%>%
summarise(total.count=n())
?summarise
?n
convertbl %>%
group_by(type, year)%>%
summarise(Emissions=n())
str(convertbl)
convertbl %>%
group_by(type, year)%>%
summarise(sum(Emissions))
convertbl %>%
group_by(type, year)%>%
summarise(total.count = sum(Emissions))
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510
total <- data.frame(with(baltdata, tapply(Emissions, list(year, type), sum))) ##checking between these two
total <- cbind(Years = rownames(total), total) ##convert row names to column
rownames(total) <- NULL ## remove row names
total$Years <- factor(total$Years)
str(total)
total
convertbl <- tbl_df(baltdata) ## convert table to tbl
rm("baltdata") ## remove other handle
convertbl ##print converted table
convertbl %>%
group_by(type, year)%>%
summarise(total.count = sum(Emissions))
str(convertbl)
convertbl %>%
group_by(type, year)%>%
summarise(total.count = sum(Emissions))
sumtable <- convertbl %>%
group_by(type, year)%>%
summarise(total.count = sum(Emissions))
sumtable
sumtable <- convertbl %>%
group_by(type, year)%>%
summarise(Emissions = sum(Emissions))
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type)
?summarise
testtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)
testtable
convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>%
summarise(Emissions)
convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>%
summarise(sum(Emissions))
testtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year) #
str(testtable)
?group_by
testtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>% ##group by type and year then...
sum(Emissions)
str(sumtable)
sumtable
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type)
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"))
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom  =	"density",)
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"))
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"), method  =	"lm")
?method
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"), method  =	"gam")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"), method  =	"rlm")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"), method  =	"lm")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"), method  =	"gam")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("line",	"smooth"), method  =	"gam") ##p
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",	"smooth"), method  =	"gam") ##plo
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point"), method  =	"gam") ##plot
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") ##p
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + labs(x = "Years", y = "Total Emissions (tons)")#
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
+ labs(x = "Years", y = "Total Emissions (tons)")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)") +
ggtitle(Test)
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)") +
ggtitle("Test")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", ggtitle("Testicles"))
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title("Testicles"))
?labs
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "New Plot Title")
qplot(year,  Emissions,  data	=	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Source Type, Baltimore 1999 - 2008")
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
classcode
classcode
str(classcode)
classcode[,"SCC"] ## subset the first column b
str(classcode)
classcode[,"Data.Category"] ## subset the first column by name
str(classcode)
levels(classcode)
levels(classcode[,"Data.Category"])
levels(classcode[,"EI.Sector"])
str(classcode)
levels(classcode[,"Option.Group"])
levels(classcode[,"Option.Set"])
levels(classcode[,"SCC.Level.One"])
levels(classcode[,"SCC.Level.Two"])
str(classcode)
levels(classcode[,"SCC.Level.Three"])
str(classcode)
levels(classcode[,"SCC.Level.Four"])
classcode[which(classcode$SCC.Level.Four == "oal"),]
?grep
grep("oal", classcode$SCC.Level.Four)
grep("^C", classcode$SCC.Level.Four)
level <- levels(classcode[,"SCC.Level.Four"])
level
grep("^C", level)
grep("^Coal", level)
grep("^Coal", level, value = TRUE)
grep("*.oal.*", level, value = TRUE)
grep("*.oal.*", classcode, value = TRUE)
grep("*.oal.*", level, value = TRUE)
str(classcode)
level <- levels(classcode[,"Data.Category"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Short.Name"])
grep("*.oal.*", level, value = TRUE)
str(classcode)
level <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Option.Group "])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Option.Group"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Option.Set"])
grep("*.oal.*", level, value = TRUE)
classcode[,"Option.Set"] ##
?levels
levels(classcode$Option.Set)
str(classcode)
level <- levels(classcode[,"SCC.Level.One"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"SCC.Level.Two"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"SCC.Level.Three"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"SCC.Level.Four"])
grep("*.oal.*", level, value = TRUE)
str(classcode)
level <- levels(classcode[,"Map.To"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Last.Inventory.Year"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Created_Date"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Revised_Date"])
grep("*.oal.*", level, value = TRUE)
level <- levels(classcode[,"Usage.Notes"])
grep("*.oal.*", level, value = TRUE)
str(classcode)
grep("*.oal.*", classcode$EI.Sector, value = TRUE)
level <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", level, value = TRUE)
classcode[which(classcode$EI.Sector == list("Fuel Comb - Comm/Institutional - Coal","Fuel Comb - Electric Generation - Coal" "Fuel Comb - Industrial Boilers, ICEs - Coal" ),]
classcode[which(classcode$EI.Sector == list("Fuel Comb - Comm/Institutional - Coal","Fuel Comb - Electric Generation - Coal" "Fuel Comb - Industrial Boilers, ICEs - Coal" )),]
classcode[which(classcode$EI.Sector == list("Fuel Comb - Comm/Institutional - Coal","Fuel Comb - Electric Generation - Coal", "Fuel Comb - Industrial Boilers, ICEs - Coal" )),]
level <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", level, value = TRUE)
str(classcode)
head(classcode)
classcode[which(classcode$EI.Sector == "Fuel Comb - Comm/Institutional - Coal"),]
level <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", level, value = TRUE)
str(subsetable)
subsetable <- classcode[which(classcode$EI.Sector == "Fuel Comb - Comm/Institutional - Coal"),]
str(subsetable)
head(subsetable)
level <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", level, value = TRUE)
subsetable <- classcode[which(classcode$EI.Sector == list("Fuel Comb - Comm/Institutional - Coal", "Fuel Comb - Electric Generation - Coal"),]
subsetable <- classcode[which(classcode$EI.Sector == list("Fuel Comb - Comm/Institutional - Coal", "Fuel Comb - Electric Generation - Coal")),]
str(subsetable)
subsetable
subsetable <- classcode[which(classcode$EI.Sector == grep("*.oal.*", factlevels, value = TRUE),]
subsetable <- classcode[which(classcode$EI.Sector == grep("*.oal.*", factlevels, value = TRUE)),]
factlevels <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", factlevels, value = TRUE)
subsetable <- classcode[which(classcode$EI.Sector == grep("*.oal.*", factlevels, value = TRUE)),]
str(subsetable)
subsetable <- classcode[which(classcode$EI.Sector == "Fuel Comb - Comm/Institutional - Coal"),]
str(subsetable)
factlevels <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", factlevels, value = TRUE)
subsetable <- classcode[which(classcode$EI.Sector == "Fuel Comb - Electric Generation - Coal"),]
str(subsetable)
subsetable <- classcode[which(classcode$EI.Sector == "Fuel Comb - Industrial Boilers, ICEs - Coal"),]
str(subsetable)
subsetable <- classcode[which(classcode$EI.Sector == grep("*.oal.*", factlevels, value = TRUE)),]
str(subsetable)
?setkey
?setkey
??setkey
library(data.table)
?setkey
factlevels <- levels(classcode[,"EI.Sector"])
grep("*.oal.*", factlevels)
grep("*.oal.*", classcode$EI.Sector, value = TRUE)
grep("*.oal.*", classcode$EI.Sector)
subsetable <- classcode[which(classcode$EI.Sector == grep("*.oal.*", classcode$EI.Sector)),]
str(subsetable)
subsetable <- classcode[which(grep("*.oal.*", classcode$EI.Sector)),]
subsetable <- classcode[, which(classcode$EI.Sector == grep("*.oal.*", classcode$EI.Sector))]
str(subsetable)
grep("*.oal.*", classcode$EI.Sector)
listloc <- grep("*.oal.*", classcode$EI.Sector)
listloc <- grep("*.oal.*", classcode$EI.Sector)
subsetable <- classcode[, which(classcode$EI.Sector == listloc)]
str(subsetable)
subsetable <- classcode[which(classcode$EI.Sector == listloc) ,]
str(listloc)
listloc <- grepl("*.oal.*", classcode$EI.Sector)
str(listloc)
listloc <- grep("*.oal.*", classcode$EI.Sector)
?grep
classcode[,"Option.Set"] ## subset
subsetable <- classcode[which(classcode$EI.Sector == listloc),]
str(subsetable)
convertbl <- tbl_df(emissdata) ## convert table to tbl
rm("emissdata") ## remove other handle
convertbl ##print converted table
filter(convertbl, SCC == "10100401") ## for
grep("*.oal.*", factlevels, value = TRUE)
listloc <- grep("*.oal.*", classcode$EI.Sector)
listloc
?which
?c
grep("*.oal.*", factlevels, value = TRUE)
subsetable <- classcode[which(classcode$EI.Sector == c("Fuel Comb - Comm/Institutional - Coal", "Fuel Comb - Electric Generation - Coal", "Fuel Comb - Industrial Boilers, ICEs - Coal"),]
subsetable <- classcode[which(classcode$EI.Sector == c("Fuel Comb - Comm/Institutional - Coal", "Fuel Comb - Electric Generation - Coal", "Fuel Comb - Industrial Boilers, ICEs - Coal")),]
str(subsetable)
?which
subsetable <- classcode[which(classcode$EI.Sector == "Fuel Comb - Comm/Institutional - Coal"),]
subsetable
emissdata <- readRDS("summarySCC_PM25.rds") ##assign handle to emmission d
listloc
emissdata[listloc, ]
str(emissdata)
str(emissdata)
?factor
emissdata$year <- factor(emissdata$year)
str(emissdata)
emissdata[listloc, ]
listloc <- grep("*.oal.*", classcode$EI.Sector)
listloc
test <- emissdata[listloc, ]
str(test)
test
listloc
str(listloc)
x <- c(1,2,3)
test <- emissdata[x, ]
str(test)
test
head(emissdata)
classcode[listloc, ]
subclass[,1] ## subse
subclass <- classcode[listloc, ] ##subset classcode by list locations
subclass[,1] ## subset the fir
subcol <- subclass[,1] ## subset the fi
str(subcol)
listloc <- grep("*.oal.*", classcode$EI.Sector) ##find strings containing "oal" in EI.Sector column
subclass <- classcode[listloc, ] ##subset classcode by list locations
subcol <- subclass[,1] ## sub
str(subcol)
classcode[listloc, ]
str(subclass)
str(subcol)
subclass[,1] ## sub
str(subclass)
subcol <- subclass[,1] ##
subcol
str(subcol)
str(emissdata)
str(listloc)
str(subclass)
classcode <- readRDS("Source_Classification_Code.rds") ##assign ha
str(classcode)
classcode$SCC <- as.numeric(classcode$SCC)
str(classcode)
head(classcode)
classcode <- readRDS("Source_Classification_Code.rds") ##assign handle to classifica
?factor
testdf[] <- lapply(testdf, function(x)
as.numeric(levels(x))[x])
str(testdf)
classcode[] <- lapply(classcode, function(x)
as.numeric(levels(x))[x])
str(classcode)
classcode <- readRDS("Source_Classification_Code.rds") ##ass
classcode$SCC <- as.numeric(as.character(classcode$SCC))
str(classcode)
subcol <- subclass[,1] ## subset the first column, SCC
str(subcol)
classcode$SCC <- as.numeric(as.character(classcode$SCC))
listloc <- grep("*.oal.*", classcode$EI.Sector) ##find strings containing "oal" in EI.Sector column
subclass <- classcode[listloc, ] ##subset classcode by list locations
subcol <- subclass[,1] ## subset the first column, SCC
str(subcol)
emissdata[subcol, ]
classcode[listloc, ]
listloc
emissdata[which(emissdata$SCC == subcol),]
test <- emissdata[which(emissdata$SCC == subcol),]
str(test)
subcol
test
emissmatch <- emissdata[which(emissdata$SCC == subcol),] ##subset emissdata
head(emissdata)
subcol
emissmatch <- emissdata[which(emissdata$SCC = subcol),] ##s
emissmatch <- emissdata[which(emissdata$SCC == subcol),] ##subs
?match
subclass <- classcode[listloc, ] ##sub
str(subcol)
emissdata[which(emissdata$SCC == "10100101"),] ## s
testlist <- c(10100101,10100102)
emissdata[which(emissdata$SCC == testlist),]
test <- emissdata[which(emissdata$SCC == testlist),]
str(test)
test
emissmatch <- emissdata[which(emissdata$SCC == subcol),]
emissmatch
str(testlist)
str(subcol)
test <- emissdata[which(emissdata$SCC == testlist),]
test
str(subcol)
str(testlist)
str(test)
str(emissmatch)
test <- emissdata[which(testlist %in% emissdata$SCC),]
test
testlist <- c(10100101,10100102)
test <- emissdata[which(testlist %in% emissdata$SCC),]
test
test <- emissdata[which(emissdata$SCC %in% testlist),]
test
emissmatch <- emissdata[which(emissdata$SCC %in% subcol),] ##s
emissmatch
str(emissmatch)
head(emissmatch)
str(subcol)
subcol
head(emissmatch)
?%in%
??%in%
str(emissmatch)
qplot(year, Emissions, data = emissmatch)
str(emissmatch)
convertbl <- tbl_df(emissmatch) ## convert table to tbl
rm("emissmatch") ## remove other handle
convertbl ##print converted table
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summ
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped d
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions
qplot(year,  Emissions,  data  =	sumtable, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Source Type, Baltimore 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, geom =	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, geom =	c("point",  "smooth"), method  =	"lm") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, aes(group = 1), geom =	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Coal Combustion 1999 - 2008")
?aes
qplot(year,  Emissions,  data  =	sumtable, geom =	c("point",  aes(group = 1)), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, geom =	"point", aes(group = 1)), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, geom =	"point") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, fill = Emissions) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
sumtable
qplot(year,  Emissions,  data  =	sumtable) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable, geom="histogram") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year,  Emissions,  data  =	sumtable) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(Emissions,  data  =	sumtable, geom="histogram) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year, Emissions, data = sumtable) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year, Emissions, data = sumtable) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")+
geom_bar()
?geom_bar
qplot(year, Emissions, data = sumtable, geom = "bar") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
c <- ggplot(mtcars, aes(factor(cyl)))
c + geom_bar()
c <- qplot(year, Emissions, data = sumtable, geom = "bar") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
c + geom_bar()
c <- qplot(year, Emissions, data = sumtable) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
c
c + geom_bar()
?geom_bar
qplot(year, Emissions, data = sumtable, geom_bar(stat = "identity") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
)
qplot(year, Emissions, data = sumtable, geom_bar(stat = "identity")) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
c <- qplot(year, Emissions, data = sumtable, geom_bar(stat = "identity")) + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
c + geom_bar()
qplot(year, Emissions, data = sumtable, geom = "bar") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)/1000) ##summa
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows w
classcode$SCC <- as.numeric(as.character(classcode$SCC)) ##convert SCC column from factor to numbe
levels(classcode)
str(classcode)
levels(classcode$Data.Category)
str(classcode)
levels(classcode$Data.Category)
listloc <- grep("Onroad", classcode$Data.Category) ##iden
listloc
subclass <- classcode[listloc, ] ##subset classcode by list locations
subcol <- subclass[,1] ##subset the first column of resultant data, SCC
emissmatch <- emissdata[which(emissdata$SCC %in% subcol),] ##sub
convertbl <- tbl_df(emissmatch) ## convert table to tbl
rm("emissmatch") ## remove other handle
convertbl
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmis
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008") #
