?NOT
??NOT
5 !== 7
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTrue(6 > 4)
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
q()
getwd()
library(swirl)
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants0
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20)
sample(1:20, 10)
LETTERS()
LETTERS
sample(LETTERS)
flips <- sample(0,1), 100, replace = TRUE)
sample(c(0,1), 100, replace = TRUE)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips, 1)
sum(flips)
sum(3, 1)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm()
rnorm(10)
rnorm(100, 25)
rnorm(10, mean = 100, sd = 25)
rpois(5, mean = 10)
rpois(5, mean = 10)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class()
class(t1)
unclass(t1)
t2 <- as.POSIXlt())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekday(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- c("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot( y = cars$speed, x = cars$dist)
plot(y = cars$speed, x = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
xlim = c(10, 15)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(data = mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
day(this_dat)
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
mydate <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920//1//2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- Update(this_moment)
?update
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 11, minutes = 16, seconds = 32)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
con = url("http://www.seek.com.au/JobSearch?DateRange=7&SearchFrom=quickupper&SearchType=search+again&Keywords=+Driver+hc+or+Driver+mc&state=3107")
htmlCode = readLines(con)
close(con)
htmlCode
head(htmlCode)
library(XML)
url <- "http://www.seek.com.au/JobSearch?DateRange=7&SearchFrom=quickupper&SearchType=search+again&Keywords=+Driver+hc+or+Driver+mc&state=3107"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
head(htmlCode)
htmlCode
xpathSApply(html, "//h2", xmlValue)
xpathSApply(html, "//dd", xmlValue)
xpathSApply(html, "//job-title", xmlValue)
str(xpathSApply(html, "//job-title", xmlValue))
xpathSApply(html, "//a class="job-title", xmlValue)
xpathSApply(html, "//dd", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "//article data-bind="attr: {'data-job-id': id}" class="experimental-fade experimental-fade-completed" data-job-id="28306370"", xmlValue)
xpathSApply(html, "//article", xmlValue)
xpathSApply(html, "//article data bind", xmlValue)
xpathSApply(html, "//article data-bind", xmlValue)
xpathSApply(html, "//article", xmlValue)
xpathSApply(html, "//dl", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "///a", xmlValue)
xpathSApply(html, "////a", xmlValue)
xpathSApply(html, "/////a", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "/a", xmlValue)
xpathSApply(html, "//a", xmlValue)
?oauth
?mutate
?merge
setwd("C:/Users/KOLeary/Documents/Rail Workers")
setwd("C:/Users/KOLeary/Documents/")
dir()
dir()
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
readfile
str(readfile)
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
str(readfile)
readfile
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
str(readfile)
?split
setwd("C:/Users/KOLeary/Documents/GitHub/Exploratory-Data-Analysis-Course-Project-2")
library(graphics) ##plotting functions for the "base" graphing systems, including plot, hist, boxplot and many others.
library(grDevices) ##contains all the code implementing the various graphics devices, including X11, PDF, PostScript, PNG, etc.
if (!file.exists("exdata-data-NEI_data.zip")) { ##check that file doesn't already exist
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip" ##identify url of file
download.file(fileUrl, destfile = "./exdata-data-NEI_data.zip") ##download file
unzip("./exdata-data-NEI_data.zip") ##unzip file in working directory
}
png(file="plot1.png", bg="transparent") ##open png file
total <- data.frame("Total" = tapply(emissdata$Emissions, emissdata$year, sum)) ##sum emissions column by year factor and then name column
total <- cbind(Years = rownames(total), total, stringsAsFactors=FALSE) ##convert row names to column without converting to factor
rownames(total) <- NULL ## remove row names
with(total, plot(Years, Total, main = "PM.25 Emissions US 1999 - 2008", ylab = "Total Emmisions (tons)", xlab = "Years", type="l")) ##plot Years and Total, name labels and title, line style
dev.off() ##close png
emissdata <- readRDS("summarySCC_PM25.rds") ##assign handle and read emmission data
classcode <- readRDS("Source_Classification_Code.rds") ##assign handle and read classification codes
png(file="plot1.png", bg="transparent") ##open png file
total <- data.frame("Total" = tapply(emissdata$Emissions, emissdata$year, sum)) ##sum emissions column by year factor and then name column
total <- cbind(Years = rownames(total), total, stringsAsFactors=FALSE) ##convert row names to column without converting to factor
rownames(total) <- NULL ## remove row names
with(total, plot(Years, Total, main = "PM.25 Emissions US 1999 - 2008", ylab = "Total Emmisions (tons)", xlab = "Years", type="l")) ##plot Years and Total, name labels and title, line style
dev.off() ##close png
png(file="plot2.png", bg="transparent") ##open png file
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510
total <- data.frame("Total" = tapply(baltdata$Emissions, baltdata$year, sum)) ##sum emissions column by year factor and then name column
total <- cbind(Years = rownames(total), total, stringsAsFactors=FALSE) ##convert row names to column without converting to factor
rownames(total) <- NULL ## remove row names
with(total, plot(Years, Total, main = "PM.25 Emissions Baltimore 1999 - 2008", ylab = "Total Emmisions (tons)", xlab = "Years", type="l")) ##plot Years and Total, name labels and title, line style
dev.off() ##close png
png(file="plot3.png", bg="transparent") ##open png file
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
convertbl <- tbl_df(baltdata) ## convert table to tbl
rm("baltdata") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions
qplot(year,  Emissions,  data  =	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Source Type, Baltimore 1999 - 2008")
dev.off() ##close png
library(ggplot2)##summon ggplot2
library(dplyr) ##summon dplyr
png(file="plot3.png", bg="transparent") ##open png file
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
convertbl <- tbl_df(baltdata) ## convert table to tbl
rm("baltdata") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions
qplot(year,  Emissions,  data  =	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Source Type, Baltimore 1999 - 2008")
dev.off() ##close png
png(file="plot3.png", width=650, height=480, bg="transparent") ##open png file
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
convertbl <- tbl_df(baltdata) ## convert table to tbl
rm("baltdata") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions
qplot(year,  Emissions,  data  =	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Source Type, Baltimore 1999 - 2008")
dev.off() ##close png
setwd("C:/Users/KOLeary/Documents/GitHub/Exploratory-Data-Analysis-Course-Project-2")
library(graphics) ##plotting functions for the "base" graphing systems, including plot, hist, boxplot and many others.
library(grDevices) ##contains all the code implementing the various graphics devices, including X11, PDF, PostScript, PNG, etc.
library(ggplot2)##summon ggplot2
library(dplyr) ##summon dplyr
if (!file.exists("exdata-data-NEI_data.zip")) { ##check that file doesn't already exist
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip" ##identify url of file
download.file(fileUrl, destfile = "./exdata-data-NEI_data.zip") ##download file
unzip("./exdata-data-NEI_data.zip") ##unzip file in working directory
}
emissdata <- readRDS("summarySCC_PM25.rds") ##assign handle and read emmission data
classcode <- readRDS("Source_Classification_Code.rds") ##assign handle and read classification codes
png(file="plot3.png", width=650, height=480, bg="transparent") ##open png file
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
convertbl <- tbl_df(baltdata) ## convert table to tbl
rm("baltdata") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(type, year)%>% ##group by type and year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions
qplot(year,  Emissions,  data  =	sumtable,	facets	=	.~type, geom	=	c("point",  "smooth"), method  =	"gam") + ##plot Year by Emissions, seperate by type, point, smooth and general additive model (gam)
labs(x = "Years", y = "Total Emissions (tons)", title = "Total Emissions by Source Type, Baltimore 1999 - 2008\n")
dev.off() ##close png
png(file="plot4.png", bg="transparent") ##open png file
classcode$SCC <- as.numeric(as.character(classcode$SCC)) ##convert SCC column from factor to number while preserving content
listloc <- grep("*.oal.*", classcode$EI.Sector) ##identify the locations of strings containing "oal" in EI.Sector column
subclass <- classcode[listloc, ] ##subset classcode by list locations
subcol <- subclass[,1] ##subset the first column of resultant data, SCC
emissmatch <- emissdata[which(emissdata$SCC %in% subcol),] ##subset emissdata where SCC matches subcol contents
emissmatch$year <- factor(emissmatch$year) ##convert year column to factor
convertbl <- tbl_df(emissmatch) ## convert table to tbl
rm("emissmatch") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)/1000) ##summarise the grouped data in columns and name and sum emmissions. Divide for kilotons
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008\n") ##assign labels
dev.off() ##close png
png(file="plot5.png", bg="transparent") ##open png file
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
baltonroad <- baltdata[which(baltdata$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
baltonroad$year <- factor(baltonroad$year) ##convert year column to a factor vector
convertbl <- tbl_df(baltonroad) ## convert table to tbl
rm("baltonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions.
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore City 1999 - 2008\n") ## add labels
dev.off() ##close png
png(file="plot6.png", width=650, height=480, bg="transparent") ##open png file
bala <- subset(emissdata, emissdata$fips %in% c("24510","06037"))##subset data by rows where fips is equal to 24510 (Baltimore) and LA 06037
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
levels(balaonroad$fips) <- c("Los Angeles", "Baltimore") ##convert fips levels to city names
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl handle then...
group_by(fips, year)%>% ##group by year then... (SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP)
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
mutate(Change = (Emissions-Emissions[1])/Emissions[1]) ##add percentage change column
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
dev.off() ##close png
png(file="plot6.png", width=650, height=480, bg="transparent") ##open png file
bala <- subset(emissdata, emissdata$fips %in% c("24510","06037"))##subset data by rows where fips is equal to 24510 (Baltimore) and LA 06037
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
levels(balaonroad$fips) <- c("Los Angeles", "Baltimore") ##convert fips levels to city names
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl handle then...
group_by(fips, year)%>% ##group by year then... (SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP)
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
mutate(Change = (Emissions-Emissions[1])/Emissions[1]) ##add percentage change column
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
dev.off() ##close png
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
dev.off() ##close png
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
bala <- subset(emissdata, emissdata$fips %in% c("24510","06037"))##subset data by rows where fips is equal to 24510 (Baltimore) and LA 06037
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
levels(balaonroad$fips) <- c("Los Angeles", "Baltimore") ##convert fips levels to city names
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl handle then...
group_by(fips, year)%>% ##group by year then... (SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP)
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
mutate(Change = (Emissions-Emissions[1])/Emissions[1]) ##add percentage change column
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
library(graphics) ##plotting functions for the "base" graphing systems, including plot, hist, boxplot and many others.
library(grDevices) ##contains all the code implementing the various graphics devices, including X11, PDF, PostScript, PNG, etc.
library(ggplot2)
library(dplyr) ##bring up dplr library
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
library(scales)
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
?file.exists
png(file="plot6.png", width=650, height=480, bg="transparent") ##open png file
bala <- subset(emissdata, emissdata$fips %in% c("24510","06037"))##subset data by rows where fips is equal to 24510 (Baltimore) and LA 06037
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
levels(balaonroad$fips) <- c("Los Angeles", "Baltimore") ##convert fips levels to city names
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl handle then...
group_by(fips, year)%>% ##group by year then... (SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP)
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
mutate(Change = (Emissions-Emissions[1])/Emissions[1]) ##add percentage change column
ggplot(data=sumtable, aes(x=year, y=Change, group=1, colour=fips )) + ##identify data, identify labels, single line connecting points, colour by city
geom_rect(data = sumtable,aes(fill = fips),xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.01) + ##create transparent rectangles over the facets that match the extent of the graph
facet_grid(.~fips)+ ##side by side graphs
geom_line()+ ##line style
geom_point()+ ##point style
geom_hline(yintercept=0, linetype="dashed") + ##introduce 0% line with dash style
scale_y_continuous(labels = percent) + ##change y axis to percentage
theme(legend.title=element_blank(), ##remove legend title/background
legend.background=element_blank(), ##remove legend background
plot.background=element_blank(), ##make plot background transparent
strip.background = element_rect(colour="black")) + ##add outline to facet label
xlab("Years") + ylab("Percent Change") + ##add label titles
ggtitle("Percentage Change in Motor Vehicle Emissions - L.A. and Baltimore Cities 1999 - 2008\n") ##add chart title with new line at end for space
dev.off() ##close png
