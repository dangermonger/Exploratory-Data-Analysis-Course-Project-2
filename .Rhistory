ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants0
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20)
sample(1:20, 10)
LETTERS()
LETTERS
sample(LETTERS)
flips <- sample(0,1), 100, replace = TRUE)
sample(c(0,1), 100, replace = TRUE)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips, 1)
sum(flips)
sum(3, 1)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm()
rnorm(10)
rnorm(100, 25)
rnorm(10, mean = 100, sd = 25)
rpois(5, mean = 10)
rpois(5, mean = 10)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class()
class(t1)
unclass(t1)
t2 <- as.POSIXlt())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekday(d1)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- c("October 17, 1986 08:24")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head()
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot( y = cars$speed, x = cars$dist)
plot(y = cars$speed, x = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
xlim = c(10, 15)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
mtcars
data(mtcars)
?boxplot
boxplot(data = mtcars, mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
q()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
day(this_dat)
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
mydate <- ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920//1//2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- Update(this_moment)
?update
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 11, minutes = 16, seconds = 32)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
con = url("http://www.seek.com.au/JobSearch?DateRange=7&SearchFrom=quickupper&SearchType=search+again&Keywords=+Driver+hc+or+Driver+mc&state=3107")
htmlCode = readLines(con)
close(con)
htmlCode
head(htmlCode)
library(XML)
url <- "http://www.seek.com.au/JobSearch?DateRange=7&SearchFrom=quickupper&SearchType=search+again&Keywords=+Driver+hc+or+Driver+mc&state=3107"
html <- htmlTreeParse(url, useInternalNodes=T)
xpathSApply(html, "//title", xmlValue)
head(htmlCode)
htmlCode
xpathSApply(html, "//h2", xmlValue)
xpathSApply(html, "//dd", xmlValue)
xpathSApply(html, "//job-title", xmlValue)
str(xpathSApply(html, "//job-title", xmlValue))
xpathSApply(html, "//a class="job-title", xmlValue)
xpathSApply(html, "//dd", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "//article data-bind="attr: {'data-job-id': id}" class="experimental-fade experimental-fade-completed" data-job-id="28306370"", xmlValue)
xpathSApply(html, "//article", xmlValue)
xpathSApply(html, "//article data bind", xmlValue)
xpathSApply(html, "//article data-bind", xmlValue)
xpathSApply(html, "//article", xmlValue)
xpathSApply(html, "//dl", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "///a", xmlValue)
xpathSApply(html, "////a", xmlValue)
xpathSApply(html, "/////a", xmlValue)
xpathSApply(html, "//a", xmlValue)
xpathSApply(html, "/a", xmlValue)
xpathSApply(html, "//a", xmlValue)
?oauth
?mutate
?merge
setwd("C:/Users/KOLeary/Documents/Rail Workers")
setwd("C:/Users/KOLeary/Documents/")
dir()
dir()
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
readfile
str(readfile)
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
str(readfile)
readfile
readfile <- read.csv("Rail Workers.csv", colClasses = "character")
str(readfile)
?split
setwd("C:/Users/KOLeary/Documents/GitHub/Exploratory-Data-Analysis-Course-Project-2")
library(graphics) ##plotting functions for the "base" graphing systems, including plot, hist, boxplot and many others.
library(grDevices) ##contains all the code implementing the various graphics devices, including X11, PDF, PostScript, PNG, etc.
library(ggplot2)
library(dplyr) ##bring up dplr library
emissdata <- readRDS("summarySCC_PM25.rds") ##assign handle to emmission data
classcode <- readRDS("Source_Classification_Code.rds") ##assign handle to classification codes
classcode$SCC <- as.numeric(as.character(classcode$SCC)) ##convert SCC column from factor to number while preserving content
listloc <- grep("*.oal.*", classcode$EI.Sector) ##identify the locations of strings containing "oal" in EI.Sector column
subclass <- classcode[listloc, ] ##subset classcode by list locations
subcol <- subclass[,1] ##subset the first column of resultant data, SCC
emissmatch <- emissdata[which(emissdata$SCC %in% subcol),] ##subset emissdata where SCC matches subcol contents
convertbl <- tbl_df(emissmatch) ## convert table to tbl
rm("emissmatch") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)/1000) ##summarise the grouped data in columns and name and sum emmissions. Divide for kilotons
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008") ##assign labe
sumtable
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = white"") + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = "white") + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008") ##assign labels
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008") ##assign labels
str(sumtable)
ggplot(data=sumtable, aes(x=year, y=Emissions, fill=year)) +
geom_bar(stat="identity")
dat <- data.frame(
time = factor(c("Lunch","Dinner"), levels=c("Lunch","Dinner")),
total_bill = c(14.89, 17.23)
)
ggplot(data=dat, aes(x=time, y=total_bill, fill=time)) +
geom_bar(stat="identity")
str(dat)
str(emissmatch)
emissmatch <- emissdata[which(emissdata$SCC %in% subcol),] ##subset emissdata
str(emissmatch)
emissmatch$year <- factor(emissmatch$year)
convertbl <- tbl_df(emissmatch) ## convert table to tbl
rm("emissmatch") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)/1000) ##summarise the grouped data in columns and name and sum emmissions. Divide for kilotons
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (kilotons)", title = "Total Emissions in US by Coal Combustion 1999 - 2008")
str(baltonroad)
baltonroad <- baltdata[which(baltdata$type == "ON-ROAD"),] ##su
baltdata <- emissdata[which(emissdata$fips == "24510"),] ##subset data by rows where fips is equal to 24510 (Baltimore)
baltonroad <- baltdata[which(baltdata$type == "ON-ROAD"),] ##subset baltdata by rows whe
str(baltonroad)
baltonroad$year <- factor(baltonroad$year)
convertbl <- tbl_df(baltonroad) ## convert table to tbl
rm("baltonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions.
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar") + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore City 1999 - 2008") #
qplot(year, Emissions, data = sumtable, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore City 1999 - 2008") #
bala <- emissdata[which(emissdata$fips == "24510"|"06037" ),] ##
bala <- emissdata[which(emissdata$fips == c("24510"|"06037") ),] ##subset
bala <- emissdata[which(emissdata$fips == "24510"|"06037"),] ##su
bala <- emissdata[which(emissdata$fips == "24510|06037"),] ##su
bala
bala <- emissdata[which(emissdata$fips == c("24510",|"06037"),] ##s
bala <- emissdata[which(emissdata$fips == c("24510","06037"),] ##subset d
bala <- emissdata[which(emissdata$fips == c("24510","06037")),] ##s
str(bala)
tail(bala)
bala <- emissdata[which(emissdata$fips == "24510"),]
str(bala)
bala <- emissdata[which(emissdata$fips == "06037"),] ##su
str(bala)
bala <- emissdata[which(emissdata$fips == "06037" & emissdata$fips == "24510"),] ##su
str(bala)
?which
bala <- emissdata[which(emissdata$fips == c("06037","24510")),] ##su
bala <- emissdata[which(emissdata$fips == c("06037"|"24510")),] ##subse
bala <- emissdata[which(emissdata$fips == "06037"|"24510"),] ##su
df = data.frame(x = c('a','b','c','d','e','f','g','h','a','a','b','b'), y = 1:12)
df
subset(df, x %in% c('a','b'))
set.seed(13435) ## makes sample numbers below reproduceable
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15)) ##3 variables, 5 observations
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA ## rescramble the dataframe, then replace 1st and 3rd characters of var2 with NAs
X
bala <- subset(emissdata, emissdata$fips %in% c("24510","06037"))
str(bala)
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the gr
sumtable
convertbl
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in
sumtable
str(sumtable)
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions.
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset bal
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and n
str(sumtable)
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions.
str(sumtable)
sumtable
qplot(year, Emissions, data = sumtable, facets  =	.~fips, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore City 1999 - 2008") ## add labels
?labs
levels(balaonroad$fips)
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
levels(balaonroad$fips)
balaonroad <- bala[which(bala$type == "ON-ROAD"),] ##subset baltdata by rows where type is equal to ON-ROAD to filter by motor vehicles
balaonroad$year <- factor(balaonroad$year) ##convert year column to a factor vector
balaonroad$fips <- factor(balaonroad$fips) ##convert fips column to a factor vector
levels(balaonroad$fips) <- c("Los Angeles", "Baltimore")
convertbl <- tbl_df(balaonroad) ## convert table to tbl
rm("balaonroad") ## remove other handle
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise the grouped data in columns and name and sum emmissions.
qplot(year, Emissions, data = sumtable, facets  =	.~fips, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore City 1999 - 2008") ##
sumtable
x <- 1:5
lag(x)
library(Lahman)
batting <- select(tbl_df(Batting), playerID, yearID, teamID, G, AB:H)
batting <- arrange(batting, playerID, yearID, teamID)
players <- group_by(batting, playerID)
mutate(players, G_delta = G - lag(G))
?mutate
sumtable
?arrange
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions.
arramge(Los Angeles)
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions.
arrange(Los Angeles)
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange(Los Angeles, Baltimore)
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange("Los Angeles", "Baltimore")
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange("Los Angeles")
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange(fips)
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(year, fips)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange(fips)
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(fips, year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(fips, year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange(fips)
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(fips, year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))%>% ##summarise the grouped data in columns and name and sum emmissions then..
arrange(fips)
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(fips, year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions))
sumtable
sumtable <- convertbl %>% ##sumtable is assigned to convertbl then...
group_by(fips, year)%>% ##group by year then... SUBSEQUENT OPERATIONS ARE PERFORMED BY GROUP
summarise(Emissions = sum(Emissions)) ##summarise
sumtable
mutate(sumtable, Change = Emissions - lag(Emissions))
qplot(year, Emissions, data = sumtable, facets  =	.~fips, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore City 1999 - 2008") ## a
sumtable/lag(sumtable,-1) - 1
R> sumtable/lag(sumtable,-1) - 1
?R>
data <- ts(data.frame(x1=c(1:10), x2=c(11:20), x3=c(21:30)), start = c(2010,3), frequency = 4)
data/lag(data,-1) - 1
R> data/lag(data,-1) - 1
data
?lag
sumtable
mutate(sumtable, Change = Emissions - lag(Emissions))
mutate(sumtable, Change = Emissions/lag(Emissions, -1))
mutate(sumtable, Change = Emissions/lag(Emissions, -1) -1)
mutate(sumtable, Change =diff(sumtable)/sumtable[-nrow(sumtable),] * 100)
mutate(sumtable, Change =diff(Emissions)/Emissions[-nrow(Emissions),] * 100)
mutate(sumtable, Change = Emissions - lag(Emissions))
qplot(year, Emissions, data = sumtable, facets  =	.~fips, stat = "identity", geom = "bar", fill = year) + ##plot Year by Emissions, bar chart and stat identity to stop data being binned
labs(x = "Years", y = "Total Emissions (tons)", title = "Motor Vehicle Emissions in Baltimore and Los Angeles Cities 1999 - 2008") ## add labels
data <- ts(data.frame(x1=c(1:10), x2=c(11:20), x3=c(21:30)), start = c(2010,3), frequency = 4)
data <- ts(data.frame(x1=c(1:10), x2=c(11:20), x3=c(21:30)), start = c(2010,3), frequency = 4)
data
?lag
mutate(sumtable, Change = Emissions/lag(Emissions))
3931 * 108%
mutate(sumtable, Change = Emissions/lag(Emissions) * 100)
mutate(sumtable, Change = Emissions - lag(Emissions)/Emissions * 100)
mutate(sumtable, Change = Emissions - lag(Emissions)/Emissions)
mutate(sumtable, Change = Emissions - lag(Emissions/Emissions))
Website <- rep(paste("Website",1:3),2)
Year <- c(rep(2013,3),rep(2014,3))
V1 <- c(10,20,50,20,30,70)
V2 <- c(5,15,30,15,30,45)
df <- data.frame(Website,Year,V1,V2)
df
growth <- function(x)x/lag(x)-1
df %>%
group_by(Website) %>%
mutate_each(funs(growth), V1, V2)
growth <- function(x)x/lag(x)-1
sumtable %>%
group_by(Emissions) %>%
mutate(funs(growth))
growth <- function(x)x/lag(x)-1
df %>%
group_by(Website) %>%
mutate_each(funs(growth), V1, V2)
growth <- function(x)x/lag(x)-1 * 100
df %>%
group_by(Website) %>%
mutate_each(funs(growth), V1, V2)
growth <- function(x)x/lag(x)-1
df %>%
group_by(Website) %>%
mutate_each(funs(growth), V1, V2)
df
sumtable
growth <- function(x)x/lag(x)-1
sumtable %>%
group_by(fips) %>%
mutate(funs(growth))
df
growth <- function(x)x/lag(x)-1
sumtable %>%
group_by(fips) %>%
mutate(funs(growth), Emissions)
growth <- function(x)x/lag(x)-1
sumtable %>%
group_by(fips) %>%
mutate_each(funs(growth), Emissions)
sumtable
growth <- (function(x)x/lag(x)-1) * 100
sumtable %>%
group_by(fips) %>%
mutate_each(funs(growth), Emissions)
mutate(sumtable, Change = Emissions/lag(Emissions) * 100)
mutate(sumtable, Change = Emissions/lag(Emissions)
mutate(sumtable, Change = Emissions/lag(Emissions))
mutate(sumtable, Change = Emissions/lag(Emissions))
growth <- function(x)x/lag(x)-1)
sumtable %>%
group_by(fips) %>%
mutate_each(funs(growth), Emissions)
4101.32100 - 3931.12000/3931.12000
(4101.321 - 3931.12)/3931.12
100 * (4101.321 - 3931.12)/3931.12
100 *(346 - 88)/88
100 *(346 - 88)/88
